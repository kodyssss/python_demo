# 引入 NeuVector GitLab 插件
include:
  - remote: 'https://gitlab.com/neuvector/gitlab-plugin/-/raw/master/scan.yml'

# 全局变量
variables:
  IMAGE_NAME: "harbor.kodyrepo.online/library/flask-demo"
  IMAGE_TAG: "$CI_COMMIT_TAG"
  DOCKER_AUTH_CONFIG: |
    {
      "auths": {
        "harbor.kodyrepo.online": {
          "auth": "YWRtaW46SGFyYm9yMTIzNDU="
        }
      }
    }
  NV_REGISTRY_USER: "admin"           # Harbor 用户名
  NV_REGISTRY_PASSWORD: "Harbor12345" # Harbor 密码

# 定义流水线阶段
stages:
  - build
  - scan
  - push

# 构建 Docker 镜像
build_image:
  stage: build
  image: docker:20.10
  script:
    - echo "构建 Docker 镜像..."
    - docker build -t $IMAGE_NAME:$IMAGE_TAG -f docker/dockerfile docker/
    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
    # 导出镜像为 tar 文件供扫描使用
    - docker save -o temp.tar $IMAGE_NAME:$IMAGE_TAG
  artifacts:
    expire_in: 1 hour
    paths:
      - temp.tar
  rules:
    - if: '$CI_COMMIT_TAG'

# NeuVector 扫描
neuvector_scan:
  stage: scan
  variables:
    scan_local_image: "true"          # 扫描本地 tar 文件
    image_tar: "temp.tar"             # 构建阶段导出的 tar 文件
    image_repo: "$IMAGE_NAME"         # 镜像名称
    image_tag: "$IMAGE_TAG"           # 镜像标签
    nv_registry_user: "$NV_REGISTRY_USER"      # Harbor 用户名
    nv_registry_password: "$NV_REGISTRY_PASSWORD" # Harbor 密码
    scan_layers: "false"              # 是否扫描镜像层（关闭以加快速度）
    high_vul_to_fail: 9               # 高危漏洞阈值，超过 9 个失败
    medium_vul_to_fail: 10            # 中危漏洞阈值，超过 10 个失败
    vul_names_to_fail: "CVE-2020-1971, CVE-2020-1972" # 指定失败的 CVE
  dependencies:
    - build_image                    # 依赖构建阶段的 tar 文件
  rules:
    - if: '$CI_COMMIT_TAG'

# 推送镜像到 Harbor
push_image:
  stage: push
  image: docker:20.10
  script:
    - echo "推送镜像到 Harbor..."
    - mkdir -p ~/.docker
    - echo "$DOCKER_AUTH_CONFIG" > ~/.docker/config.json || { echo "写入 Docker 配置失败"; exit 1; }
    - ping -c 4 harbor.kodyrepo.online || { echo "无法连接 harbor.kodyrepo.online"; exit 1; }
    - docker push $IMAGE_NAME:$IMAGE_TAG || { echo "推送 $IMAGE_TAG 失败"; exit 1; }
    - docker push $IMAGE_NAME:latest || { echo "推送 latest 失败"; exit 1; }
    - echo "镜像推送完成"
  dependencies:
    - neuvector_scan                 # 依赖扫描阶段
  rules:
    - if: '$CI_COMMIT_TAG'